Setting up the basic project structure, dependencies, and configuration files for the Coders App.
```

```replit_final_file
// package.json
{
  "name": "coders-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^2.2.1",
    "lucide-react": "^0.344.0",
    "mongoose": "^8.2.0",
    "next": "14.1.1",
    "react": "^18",
    "react-dom": "^18",
    "react-hook-form": "^7.51.0",
    "react-redux": "^9.1.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.1.1",
    "postcss": "^8",
    "tailwindcss": "^3.3.0",
    "typescript": "^5"
  }
}
```

```replit_final_file
// tailwind.config.ts
import type { Config } from 'tailwindcss'

const config: Config = {
  darkMode: 'class', // Enable dark mode based on class
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#F5F3FF',
          100: '#EDE9FE',
          200: '#DDD6FE',
          300: '#C4B5FD',
          400: '#A78BFA',
          500: '#8B5CF6', // Primary Purple
          600: '#7C3AED',
          700: '#6D28D9',
          800: '#5B21B6',
          900: '#4C1D95',
          950: '#2E1065',
        },
        accent: '#51D6CA', // Accent Cyan
        background: {
          dark: '#111827', // Dark Gray
          light: '#F9FAFB',
        },
        gray: {
          50: '#F9FAFB',
          100: '#F3F4F6',
          200: '#E5E7EB',
          300: '#D1D5DB',
          400: '#9CA3AF',
          500: '#6B7280',
          600: '#4B5563',
          700: '#374151',
          800: '#1F2937', // Dark Gray
          900: '#111827',  // Dark Gray
          950: '#030712',
        }
      },
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic':
          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
    },
  },
  plugins: [],
}
export default config
```

```replit_final_file
// .env.local
MONGODB_URI=mongodb+srv://codersapp-admin:ocIWnjUuO7upGzrA@kvlr.2k75wxc.mongodb.net/?retryWrites=true&w=majority&appName=KVLR
```

```replit_final_file
// src/lib/mongodb.ts
import mongoose from 'mongoose';

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  throw new Error(
    'Please define the MONGODB_URI environment variable inside .env.local'
  );
}

/**
 * Global is used here to maintain a cached connection across hot reloads
 * in development. This prevents connections growing exponentially
 * during API Route usage.
 */
let cached = global.mongoose

if (!cached) {
  cached = global.mongoose = { conn: null, promise: null }
}

async function dbConnect() {
  if (cached.conn) {
    return cached.conn
  }

  if (!cached.promise) {
    const opts = {
      bufferCommands: false,
    }

    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {
      return mongoose
    })
  }
  
  try {
    cached.conn = await cached.promise
  } catch (e) {
    cached.promise = null
    throw e
  }

  return cached.conn
}

export default dbConnect
```

```replit_final_file
// src/app/layout.tsx
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Coders App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  )
}
```

```replit_final_file
// src/app/globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Example dark mode colors */
@layer base {
  :root {
    --background: theme(colors.gray.50);
    --foreground: theme(colors.gray.900);
    --primary-500: theme(colors.primary.500);
  }

  .dark {
    --background: theme(colors.gray.900);
    --foreground: theme(colors.gray.50);
        --primary-500: theme(colors.primary.500);


  }
}

body {
  @apply bg-[var(--background)] text-[var(--foreground)]
}
```

```replit_final_file
// next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {
    //output: 'export', // Enable static exports
    images: {
        unoptimized: true, // Disable image optimization for static exports
    },
}

module.exports = nextConfig
```

```replit_final_file
// src/app/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function Home() {
  return (
    <main className="flex flex-col items-center justify-center h-screen">
      <div className="relative w-full h-full flex items-center justify-center">
        <Image
          src={logo}
          alt="Coders App Logo"
          fill
          style={{ objectFit: 'contain' }} // Cover the entire hero area
        />
      </div>
      <div className="absolute bottom-10">
        <svg
          className="animate-bounce w-6 h-6 text-primary-500"
          fill="none"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
        </svg>
      </div>
    </main>
  )
}
```

```replit_final_file
// src/app/sign-in/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function SignIn() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Sign In</h1>
      {/* Sign-in form will go here */}
    </div>
  )
}
```

```replit_final_file
// src/app/sign-up/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function SignUp() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Sign Up</h1>
      {/* Sign-up form will go here */}
    </div>
  )
}
```

```replit_final_file
// src/app/not-found.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function NotFound() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>404 - Not Found</h1>
    </div>
  )
}
```

```replit_final_file
// src/app/challenges/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function Challenges() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Challenges</h1>
    </div>
  )
}
```

```replit_final_file
// src/app/leaderboard/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function Leaderboard() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Leaderboard</h1>
    </div>
  )
}
```

```replit_final_file
// src/app/profile/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function Profile() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Profile</h1>
    </div>
  )
}
```

```replit_final_file
// src/app/workspace/page.tsx
import Image from 'next/image'
import logo from 'public/coders-app-logo.png'

export default function Workspace() {
  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <Image src={logo} alt="Coders App Logo" width={200} height={50} />
      <h1>Workspace</h1>
    </div>
  )
}
```

```replit_final_file
// public/coders-app-logo.png
// Place your actual logo file here.  This is just a placeholder.
```

```replit_final_file
// src/components/Footer.tsx
import Image from 'next/image';
import logo from 'public/coders-app-logo.png';

function Footer() {
  const currentYear = new Date().getFullYear();

  return (
    <footer className="bg-gray-800 text-white py-4 text-center">
      <div className="container mx-auto">
         <Image src={logo} alt="Coders App Logo" width={100} height={25} className="mx-auto mb-2" />
        <p>&copy; {currentYear} Coders App</p>
      </div>
    </footer>
  );
}

export default Footer;
```

```replit_final_file
// src/app/layout.tsx (Modified to include the Footer)
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import Footer from '@/components/Footer'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Coders App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        {children}
        <Footer />
      </body>
    </html>
  )
}